// CONFIG1
#pragma config FOSC = INTRC_NOCLKOUT// Oscillator Selection bits (INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config MCLRE = OFF      // RE3/MCLR pin function select bit (RE3/MCLR pin function is digital input, MCLR internally tied to VDD)
#pragma config CP = OFF         // Code Protection bit (Program memory code protection is disabled)
#pragma config CPD = OFF        // Data Code Protection bit (Data memory code protection is disabled)
#pragma config BOREN = OFF      // Brown Out Reset Selection bits (BOR disabled)
#pragma config IESO = OFF       // Internal External Switchover bit (Internal/External Switchover mode is disabled)
#pragma config FCMEN = OFF      // Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is disabled)
#pragma config LVP = OFF        // Low Voltage Programming Enable bit (RB3 pin has digital I/O, HV on MCLR must be used for programming)

// CONFIG2
#pragma config BOR4V = BOR40V   // Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
#pragma config WRT = OFF        // Flash Program Memory Self Write Enable bits (Write protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#include <stdint.h> 
#include <stdio.h> 
#define _XTAL_FREQ 1000000 
//VARIABLES 
const char data =65;  
//char mensaje[]="hola mundo"; 
//prototipo de funciones 
void setup(void); 
void __interrupt () isr(void) { 
    if (PIR1bits.RCIF) { 
        PORTD = RCREG; 
    }
}  
void main(void) {
    setup(); 
    //loop principal 
    while (1){ 
        __delay_us(500); 
        if (PIR1bits.TXIF) { 
            TXREG = data; 
        }

    }
    return;
}
//configuracion 
void setup(void) { 
    //configuracion de los puertos 
    ANSEL =0b00000000; //ans0 como entrada analogica 
    ANSELH =0; 
    TRISD=0; 
    PORTD=0x00; 
    //configuracion del oscilador a 1Mhz 
    OSCCONbits.IRCF=0b100; 
    OSCCONbits.SCS=1; 
    //configuracion de tx y rx 
    TXSTAbits.SYNC=0; 
    TXSTAbits.BRGH=1;  
    
    BAUDCTLbits.BRG16=1; 
    SPBRG=25; 
    SPBRGH=0; 
    
    RCSTAbits.SPEN=1; 
    RCSTAbits.RX9=0; 
    RCSTAbits.CREN=1; 
    TXSTAbits.TXEN=1;  
    
    //CONFIGURACION DE INTERRUPCIONES 
    PIR1bits.RCIF=0; 
    PIE1bits.RCIE=1; 
    INTCONbits.PEIE=1; 
    INTCONbits.GIE=1; 
}
